<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Mybatis和Spring的整合 -->
	<!-- 1. 数据源 : DriverManagerDataSource -->
	<bean id="master001" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- <property name="initialSize" value="${jdbc.initialSize}" /> <property 
			name="maxIdle" value="${jdbc.maxIdle}" /> <property name="maxWaitMillis" 
			value="${jdbc.maxWaitMillis}" /> <property name="removeAbandonedTimeout" 
			value="${jdbc.removeAbandonedTimeout}" /> <property name="logAbandoned" value="${jdbc.logAbandoned}" 
			/> <property name="validationQuery" value="${jdbc.validationQuery}" /> <property 
			name="testOnBorrow" value="${jdbc.testOnBorrow}" /> <property name="defaultAutoCommit" 
			value="${jdbc.defaultAutoCommit}" /> -->
	</bean>
	<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="biz_invest_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="master001" />
	</bean>

	<!-- 3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory 
		basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sirun" />
		<property name="sqlSessionFactoryBeanName" value="biz_invest_sqlSessionFactory" />
	</bean>

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="biz_invest_transactionManager4ms"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="master001" />
	</bean>

	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="biz_invest_transactionManager4ms" />
</beans>